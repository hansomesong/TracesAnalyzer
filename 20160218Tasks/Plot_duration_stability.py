# -*- coding: utf-8 -*-
__author__ = 'yueli'

import matplotlib.pyplot as plt
from config.config import *
import numpy as np
import math
from collections import Counter
import datetime


def check_stability(target_file):
    stable_num = file_num = 0
    dict_stable_duration = {}

    with open(target_file) as f_handler:
        next(f_handler)
        for line in f_handler:
            file_num = file_num + 1
            lines = line.split(";")
            if lines[5] == 'True':
                stable_num =  stable_num + 1
                dict_temp = {0.0: 1}
            else:
                if lines[15] != '0':
                    # print "check_stability lines[15]: ==>", lines[15]
                    dict_temp = stable_duration_producer(lines[15])
                else:
                    # print "check_stability lines[18]: ==>", lines[18]
                    dict_temp = stable_duration_producer(lines[18])


            # 把 dict_temp 的内容加入到 dict_stable_duration 里
            for key in dict_temp.keys():
                if key in dict_stable_duration.keys():
                    dict_stable_duration[key] = dict_stable_duration[key] + dict_temp[key]
                else:
                    dict_stable_duration[key] = dict_temp[key]

    print "stable_num =", stable_num
    # print "check_stability ==>", file_num
    # print "check_stability ==>", dict_stable_duration
    return file_num, dict_stable_duration


def stable_duration_producer(change_time):
    dict_stable_duration = {}
    time_temp = START_TIME

    change_times = change_time.split(",")
    for i in change_times:
        time_diff = datetime.datetime.strptime(i, "%d/%m/%Y %H:%M:%S") - time_temp
        # 得到两个 change 的 duration，并转换成 experiment number
        new_key = time_diff.days*48 + round(time_diff.seconds/1800.0)
        if new_key not in dict_stable_duration.keys():
            dict_stable_duration[new_key] = 1.0/len(change_times) # 计算时间差，找 datetime 格式计算方式
        else:
            dict_stable_duration[new_key] = dict_stable_duration[new_key] + 1.0/len(change_times)
        time_temp = datetime.datetime.strptime(i, "%d/%m/%Y %H:%M:%S")

    # print "stable_duration_producer ==>", dict_stable_duration
    return dict_stable_duration


def cdf(pdf_list):
    cdf_list = []
    for value in pdf_list:
        if not cdf_list:
            cdf_list.append(value)
        else:
            cdf_list.append(value + cdf_list[-1])

    return cdf_list


if __name__ == '__main__':
    # 实际用此段 code 进行计算，后期画图为节省时间，则直接把计算出来的结果当作 list 存了起来
    # # 读取环境变量 ‘PROJECT_LOG_DIR’ (此变量定义在工作目录下.profile或者.bashprofile)
    # try:
    #     PLANET_DIR = os.environ['PLANETLAB']
    #     CSV_FILE_DESTDIR = os.environ['PROJECT_LOG_DIR']
    #     PLANET_CSV_DIR = os.environ['PLANETLAB_CSV']
    #     PLOT_DIR = os.environ['PROJECT_PLOT_DIR']
    # except KeyError:
    #     print "Environment variable PROJECT_LOG_DIR is not properly defined or " \
    #           "the definition about this variable is not taken into account."
    #     print "If PROJECT_LOG_DIR is well defined, restart Pycharm to try again!"
    #
    #
    # file_num = 0
    # dict_stable_duration = {}
    # # 遍历VP_LIST里的5个vp
    # for vp in VP_LIST:
    #     print "vp =", vp
    #     # Creat a CSV file 来存储 SRC_reply != Locator 的情况
    #     target_file = os.path.join(CSV_FILE_DESTDIR, 'comparison_time_{0}.csv'.format(vp))
    #     file_num_temp, dict_temp = check_stability(target_file)
    #     file_num = file_num + file_num_temp
    #     print "file_num =", file_num
    #
    #     for key in dict_temp.keys():
    #         if key not in dict_stable_duration:
    #             dict_stable_duration[key] = dict_temp[key]
    #         else:
    #             dict_stable_duration[key] = dict_stable_duration[key] + dict_temp[key]
    #
    # for key in dict_stable_duration.keys():
    #     dict_stable_duration[key] = dict_stable_duration[key]/float(file_num)*100
    #
    # list_stable_duration = sorted(dict_stable_duration.items(), key=lambda e:e[0])



    ###################################   Plot part   ###################################
    list_stable_duration =[(0.0, 91.49203162253733), (1.0, 2.283860223707438), (2.0, 0.5377617701102152), (3.0, 0.2280496171703039), (4.0, 0.12138927310233544), (5.0, 0.056401821475707554), (6.0, 0.07469080636268674), (7.0, 0.07681716701716815), (8.0, 0.05169687340009549), (9.0, 0.04011073742640077), (10.0, 0.025939096350719604), (11.0, 0.0333830496308969), (12.0, 0.01799008180615057), (13.0, 0.09459528773390467), (14.0, 0.0072443905588573335), (15.0, 0.004219054238913639), (16.0, 0.015429257543104105), (17.0, 0.007924367796300704), (18.0, 0.017933674138106637), (19.0, 0.008410154586498861), (20.0, 0.016434472331775328), (21.0, 0.012609183173681267), (22.0, 0.008422066163683878), (23.0, 0.006577613411613354), (24.0, 0.01847894727764165), (25.0, 0.07076123924136705), (26.0, 0.007185539454664756), (27.0, 0.013636365220962978), (28.0, 0.0025713812889117194), (29.0, 0.013043891754450726), (30.0, 0.004994696696248368), (31.0, 0.003564950547006012), (32.0, 0.03988969160257904), (33.0, 0.01060235716179977), (34.0, 0.012187649218644323), (35.0, 0.010211073487519717), (36.0, 0.00750994677806819), (37.0, 0.0024051533023800556), (38.0, 0.004099217802317313), (39.0, 0.008674979847814053), (40.0, 0.02237477529233082), (41.0, 0.0034387817673047945), (42.0, 0.002684643909977853), (43.0, 0.011265068524947472), (44.0, 0.013604403571777144), (45.0, 0.012201950636794233), (46.0, 0.010922500054801046), (47.0, 0.012655362203198165), (48.0, 0.016293752159933585), (49.0, 0.020930343411375847), (50.0, 0.020406139224671067), (51.0, 0.0027133114979459873), (52.0, 0.011733613783399592), (53.0, 0.02373848565518387), (54.0, 0.0638455033019347), (55.0, 0.004158904198711384), (56.0, 0.008721295018195508), (57.0, 0.010289873258878153), (58.0, 0.010209203520785904), (59.0, 0.01292521979393164), (60.0, 0.05134479441167858), (61.0, 0.005751453549169699), (62.0, 0.011105533944033128), (63.0, 0.007738319320701048), (64.0, 0.006227804069440411), (65.0, 0.009146554007891692), (66.0, 0.003262642740619902), (67.0, 0.007883769303018894), (68.0, 0.003011670222110679), (69.0, 0.011732965240306186), (70.0, 0.006849458317647551), (71.0, 0.00043920190739114064), (72.0, 0.0026062530768265484), (73.0, 0.0014640063579704687), (74.0, 0.006483456728154934), (75.0, 0.005597507624968027), (76.0, 0.05442162096070994), (77.0, 0.009758679544890587), (78.0, 0.0047420892045469815), (79.0, 0.003818425936621227), (80.0, 0.004062211824475637), (81.0, 0.0035205867179766035), (82.0, 0.003890074036892961), (83.0, 0.001895240883821634), (84.0, 0.004078801387121126), (85.0, 0.0033364315582912647), (86.0, 0.004740592016285328), (87.0, 0.005107453720830556), (88.0, 0.0043197694094920846), (89.0, 0.002384238925837621), (90.0, 0.003180361180275321), (91.0, 0.0051563444711894965), (92.0, 0.004383975082933547), (93.0, 0.01149244991006818), (94.0, 0.006608942987409545), (95.0, 0.0036420892864612274), (96.0, 0.0031291124903874306), (97.0, 0.0015611088204889184), (98.0, 0.0027194972794255855), (99.0, 0.0018474221009043446), (100.0, 0.0023461021111491104), (101.0, 0.011757863307618608), (102.0, 0.007236374283682604), (103.0, 0.006689612725501796), (104.0, 0.002002723925173417), (105.0, 0.004914878487472288), (106.0, 0.002928012715940938), (107.0, 0.004178891617717066), (108.0, 0.0039662621228689745), (109.0, 0.0025515539381771027), (110.0, 0.005044801129629842), (111.0, 0.002290124231396662), (112.0, 0.01920034831943478), (113.0, 0.006420713598527628), (114.0, 0.00336198602919647), (115.0, 0.0019520084772939586), (116.0, 0.003137156481365291), (117.0, 0.0053008438000281405), (118.0, 0.006044254820763792), (119.0, 0.004850143512459989), (120.0, 0.004123119946937238), (121.0, 0.004350190320826536), (122.0, 0.004670877427810543), (123.0, 0.0024807668175719374), (124.0, 0.18508177521228095), (125.0, 0.0014640063579704687), (126.0, 0.007747482137212931), (127.0, 0.0028722410451611103), (128.0, 0.0024145379585208925), (129.0, 0.0013385200987158573), (130.0, 0.04977621617099594), (131.0, 0.005019450370184465), (132.0, 0.0022169239134981387), (133.0, 0.003660015894926172), (134.0, 0.0013086424179409497), (135.0, 0.003084870540009202), (136.0, 0.0027188689505165853), (137.0, 0.003952817166520266), (138.0, 0.0017000400360922382), (139.0, 0.0018822938888191742), (140.0, 0.003973731543062701), (141.0, 0.0035972727652988667), (142.0, 0.004303132973606056), (143.0, 0.006502102878852257), (144.0, 0.006416186677198095), (145.0, 0.0025515539381771027), (146.0, 0.002980298657297026), (147.0, 0.0018822938888191742), (148.0, 0.01099291807034309), (149.0, 0.0034508721295018197), (150.0, 0.0036809302714686082), (151.0, 0.003220813987535031), (152.0, 0.0012548625925461162), (153.0, 0.06466725226920986), (154.0, 0.0055556189324541694), (155.0, 0.015153416458473554), (156.0, 0.009079827187494397), (157.0, 0.0010457188271217634), (158.0, 0.0007110888024427992), (159.0, 0.006266843542536853), (160.0, 0.0006274312962730581), (161.0, 0.002279667043125444), (162.0, 0.0019241226419040446), (163.0, 0.0012548625925461162), (164.0, 0.0025515539381771027), (165.0, 0.002196009536955703), (166.0, 0.027188689505165856), (167.0, 0.016564186221608733), (168.0, 0.008721295018195506), (169.0, 0.002718868950516585), (170.0, 0.0029698414690258086), (171.0, 0.00923274659000597), (172.0, 0.006901744259003639), (173.0, 0.012904170326682562), (174.0, 0.03491896483488904), (175.0, 0.0030325845986531137), (176.0, 0.0024051533023800556), (177.0, 0.005019450370184464), (178.0, 0.00031371564813652904), (179.0, 0.005019450370184465), (180.0, 0.00543773790103317), (181.0, 0.005019450370184465), (182.0, 0.0023005814196678793), (183.0, 0.0015058351110553395), (184.0, 0.0014640063579704687), (185.0, 0.0006274312962730581), (187.0, 0.0035345296356715603), (188.0, 0.0015685782406826454), (189.0, 0.002256760821198015), (190.0, 0.005542309783745346), (191.0, 0.0016731501233948217), (192.0, 0.0024312962730581003), (193.0, 0.0032865448852398282), (194.0, 0.004433847826996277), (195.0, 0.006134883785781012), (196.0, 0.002384238925837621), (197.0, 0.0050891649586592485), (198.0, 0.0019241226419040446), (199.0, 0.0015058351110553395), (200.0, 0.003095327728280419), (201.0, 0.00012548625925461163), (202.0, 0.002038201059408237), (203.0, 0.00010457188271217636), (204.0, 0.0011921194629188104), (205.0, 0.0006692600493579286), (206.0, 0.004705734722047935), (207.0, 0.0006274312962730581), (208.0, 0.0025097251850922323), (209.0, 0.0010457188271217634), (210.0, 0.002196009536955703), (211.0, 0.0003585321692988903), (212.0, 0.0006274312962730581), (213.0, 0.004182875308487054), (214.0, 0.0007320031789852344), (215.0, 0.0009411469444095871), (216.0, 0.002554541706254594), (217.0, 0.0014789451983579225), (218.0, 0.0023005814196678793), (220.0, 0.006632845132029472), (221.0, 0.0012548625925461162), (222.0, 0.003973731543062701), (223.0, 0.002031682292693712), (224.0, 0.003388128999874514), (225.0, 0.0032417283640774662), (226.0, 0.002196009536955703), (227.0, 0.0019868657715313505), (228.0, 0.0006722478174354194), (229.0, 0.001254862592546116), (230.0, 0.0018822938888191742), (231.0, 0.01003890074036893), (232.0, 0.0023005814196678793), (233.0, 0.0010457188271217634), (234.0, 0.007102844033450131), (235.0, 0.002718868950516585), (236.0, 0.0025097251850922323), (237.0, 0.004667813050295169), (238.0, 0.0029280127159409374), (239.0, 0.0018822938888191742), (240.0, 0.004392019073911406), (241.0, 0.004372055350848172), (242.0, 0.0004182875308487054), (243.0, 0.002196009536955703), (244.0, 0.005511888872410896), (245.0, 0.001930727181864814), (246.0, 0.005298308724083602), (247.0, 0.0038392819795756167), (248.0, 0.0008714323559348029), (249.0, 0.007939495704585428), (250.0, 0.0018822938888191742), (251.0, 0.003973731543062701), (252.0, 0.0004182875308487054), (253.0, 0.0008365750616974108), (254.0, 0.0018195507591918683), (255.0, 0.005521395407202912), (256.0, 0.03660015894926172), (257.0, 0.017568076295645624), (258.0, 0.003137156481365291), (259.0, 0.0025097251850922323), (260.0, 0.0015685782406826454), (261.0, 0.008775994156844954), (262.0, 0.0010457188271217634), (263.0, 0.002352867361023968), (264.0, 0.002091437654243527), (265.0, 0.0335048312209813), (266.0, 0.03503158070857908), (267.0, 0.0012548625925461162), (269.0, 0.00025097251850922326), (270.0, 0.00025097251850922326), (272.0, 0.0006274312962730581), (273.0, 0.005055823198953918), (274.0, 0.05203383277425952), (275.0, 0.00363542803304256), (276.0, 0.0029280127159409374), (277.0, 0.004601162839335759), (278.0, 0.0012548625925461162), (279.0, 0.00154766386414021), (280.0, 0.0008365750616974108), (281.0, 0.0077383193207010495), (282.0, 0.15238214748818338), (283.0, 0.03204082486301083), (284.0, 0.004182875308487054), (285.0, 0.0008365750616974108), (286.0, 0.0010457188271217634), (287.0, 0.005061279123269335), (288.0, 0.004601162839335759), (289.0, 0.0012548625925461162), (290.0, 0.0013504711710258202), (291.0, 0.005835111055339441), (292.0, 0.002345397940830241), (293.0, 0.0021879655459778437), (294.0, 0.0024469820554649264), (295.0, 0.0010457188271217634), (296.0, 0.0025097251850922323), (297.0, 0.0009202325678671521), (298.0, 0.0023005814196678793), (299.0, 0.002091437654243527), (300.0, 0.0006274312962730581), (301.0, 0.0012468186015682564), (302.0, 0.00031371564813652904), (303.0, 0.0032417283640774662), (304.0, 0.0018822938888191742), (305.0, 0.0010307799867343096), (306.0, 0.002384238925837621), (307.0, 0.034278663153051406), (308.0, 0.0004182875308487054), (311.0, 0.0010614046095285899), (312.0, 0.10331702011963023), (313.0, 0.033546659974066174), (314.0, 0.011502907098339399), (315.0, 0.0010457188271217634), (316.0, 0.0006274312962730581), (317.0, 0.005298308724083602), (318.0, 0.16564186221608734), (319.0, 0.023645196565261817), (320.0, 0.0025097251850922323), (321.0, 0.001819550759191868), (322.0, 0.0018822938888191742), (323.0, 0.003388128999874514), (324.0, 0.001830007947463086), (325.0, 0.0015685782406826454), (326.0, 0.010540845777387377), (327.0, 0.018739281382022), (328.0, 0.0036505093601341566), (329.0, 0.0012548625925461162), (331.0, 0.0033463002467896434), (332.0, 0.0006274312962730581), (333.0, 0.004433847826996278), (334.0, 0.0018822938888191742), (335.0, 0.0012548625925461162), (336.0, 0.004433847826996277), (338.0, 0.0015685782406826454), (339.0, 0.004740592016285328), (340.0, 0.0002091437654243527), (342.0, 0.0012548625925461162), (343.0, 0.0005019450370184465), (344.0, 0.0007320031789852344), (345.0, 0.0010457188271217634), (346.0, 0.0033463002467896434), (347.0, 0.0013594344752582924), (348.0, 0.003555444012213996), (349.0, 0.0512402225289664), (350.0, 0.0047893922282176765), (351.0, 0.004899939647084834), (352.0, 0.0018822938888191742), (353.0, 0.0012548625925461162), (354.0, 0.002960842019862548), (355.0, 0.001416392940157042), (356.0, 0.002843202448859409), (357.0, 0.003137156481365291), (358.0, 0.0016423936873030051), (359.0, 0.0008784038147822813), (360.0, 0.0018622169992400092), (361.0, 0.0012548625925461162), (362.0, 0.0008365750616974108), (363.0, 0.0006274312962730581), (364.0, 0.0004182875308487054), (365.0, 0.0007012467428934179), (366.0, 0.0003327287177205611), (367.0, 0.0004182875308487054), (368.0, 0.0005019450370184465), (369.0, 0.0028682573543911223), (370.0, 0.003137156481365291), (371.0, 0.0021280378131927884), (372.0, 0.0029280127159409374), (373.0, 0.0006274312962730581), (374.0, 0.034508721295018197), (375.0, 0.002928012715940938), (376.0, 0.0010457188271217634), (377.0, 0.005897854184966746), (378.0, 0.005374994771405864), (379.0, 0.0019868657715313505), (380.0, 0.0025097251850922323), (381.0, 0.0012548625925461162), (382.0, 0.00031371564813652904), (383.0, 0.0009411469444095871), (384.0, 0.0029280127159409374), (385.0, 0.0004182875308487054), (386.0, 0.003011670222110679), (387.0, 0.0012548625925461162), (388.0, 0.0025097251850922323), (389.0, 0.0018822938888191742), (390.0, 0.0020705232777010916), (391.0, 0.0005019450370184465), (392.0, 0.009620613209520222), (393.0, 0.0016731501233948217), (394.0, 0.027995386886088356), (395.0, 0.003137156481365291), (396.0, 0.0016731501233948217), (399.0, 0.0006274312962730581), (400.0, 0.002718868950516585), (402.0, 0.0015162922993265568), (403.0, 0.0016731501233948217), (404.0, 0.002091437654243527), (405.0, 0.02635211444346844), (406.0, 0.004852135357844982), (407.0, 0.0011746908158001142), (408.0, 0.0012548625925461162), (409.0, 0.007403689296022086), (410.0, 0.004392019073911406), (413.0, 0.0016731501233948217), (414.0, 0.0006274312962730581), (415.0, 0.0012548625925461162), (416.0, 0.0004182875308487054), (417.0, 0.0018822938888191742), (418.0, 0.003137156481365291), (419.0, 0.00428744719119923), (420.0, 0.003137156481365291), (421.0, 0.0006274312962730581), (422.0, 0.0012548625925461162), (423.0, 0.0025097251850922323), (424.0, 0.0006274312962730581), (425.0, 0.001464006357970469), (426.0, 0.00045631367001676957), (427.0, 0.0018822938888191742), (428.0, 0.0012548625925461162), (429.0, 0.0011293763332915047), (430.0, 0.05019450370184465), (431.0, 0.0012548625925461162), (432.0, 0.0012548625925461162), (433.0, 0.0016731501233948217), (434.0, 0.0029280127159409374), (435.0, 0.0012548625925461162), (436.0, 0.0006274312962730581), (437.0, 0.0010457188271217634), (440.0, 0.0025097251850922323), (441.0, 0.0006274312962730581), (442.0, 0.0025097251850922323), (443.0, 0.003943853862287794), (444.0, 0.00031371564813652904), (445.0, 0.0038691596603505247), (447.0, 0.0037645877776383485), (448.0, 0.00242009214276751), (450.0, 0.0006274312962730581), (451.0, 0.09930145982348267), (452.0, 0.0012548625925461162), (453.0, 0.0006274312962730581), (454.0, 0.0037645877776383485), (455.0, 0.0012548625925461162), (457.0, 0.0008365750616974108), (458.0, 0.003137156481365291), (459.0, 0.0016731501233948217), (461.0, 0.0028234408332287616), (462.0, 0.003137156481365291), (463.0, 0.0025097251850922323), (464.0, 0.0012548625925461162), (466.0, 0.0028234408332287616), (467.0, 0.003137156481365291), (468.0, 0.0004182875308487054), (469.0, 0.0009411469444095871), (470.0, 0.0017568076295645626), (472.0, 0.002788583538991369), (473.0, 0.0011293763332915047), (474.0, 0.0006274312962730581), (476.0, 0.0006274312962730581), (477.0, 0.003137156481365291), (478.0, 0.0012548625925461162), (479.0, 0.0008365750616974108), (480.0, 0.0016731501233948217), (483.0, 0.0008784038147822813), (485.0, 0.0008365750616974108), (487.0, 0.003137156481365291), (488.0, 0.00031371564813652904), (489.0, 0.006274312962730582), (490.0, 0.0009411469444095871), (492.0, 0.0004182875308487054), (493.0, 0.0006274312962730581), (494.0, 0.0006274312962730581), (495.0, 0.00031371564813652904), (496.0, 0.0018822938888191742), (497.0, 0.0012548625925461162), (498.0, 0.0009411469444095871), (499.0, 0.0017568076295645626), (500.0, 0.0029280127159409374), (501.0, 0.0012548625925461162), (502.0, 0.0012548625925461162), (503.0, 0.0012548625925461162), (504.0, 0.0006274312962730581), (505.0, 0.007529175555276697), (506.0, 0.0005019450370184465), (509.0, 0.0018822938888191742), (510.0, 0.07278203036767474), (511.0, 0.0033463002467896434), (512.0, 0.0017568076295645626), (513.0, 0.04852135357844983), (514.0, 0.0006274312962730581), (515.0, 0.003137156481365291), (516.0, 0.0004182875308487054), (517.0, 0.003137156481365291), (518.0, 0.0012548625925461162), (519.0, 0.0012548625925461162), (522.0, 0.0012548625925461162), (523.0, 0.0017568076295645626), (525.0, 0.003973731543062701), (526.0, 0.0017568076295645626), (527.0, 0.0018822938888191742), (529.0, 0.011084619567490694), (530.0, 0.046743631572342834), (531.0, 0.0023005814196678793), (532.0, 0.005437737901033171), (535.0, 0.0012548625925461162), (536.0, 0.03047523439040568), (537.0, 0.021332664073283977), (538.0, 0.0025097251850922323), (539.0, 0.06441627975070063), (540.0, 0.0018822938888191742), (541.0, 0.0018822938888191742), (542.0, 0.0006274312962730581), (544.0, 0.0014640063579704687), (545.0, 0.0010875475802066342), (548.0, 0.0018822938888191742), (550.0, 0.004810306604760111), (551.0, 0.005521395407202912), (552.0, 0.0016731501233948217), (553.0, 0.0012548625925461162), (556.0, 0.002718868950516585), (557.0, 0.0006274312962730581), (558.0, 0.0018822938888191742), (559.0, 0.0018822938888191742), (563.0, 0.0009859634655719485), (564.0, 0.0006274312962730581), (566.0, 0.0012548625925461162), (568.0, 0.0033463002467896434), (569.0, 0.0012548625925461162), (570.0, 0.0025097251850922323), (571.0, 0.0025097251850922323), (572.0, 0.005019450370184465), (573.0, 0.0006274312962730581), (574.0, 0.037645877776383486), (575.0, 0.0037645877776383485), (577.0, 0.002091437654243527), (580.0, 0.0018822938888191742), (581.0, 0.0012548625925461162), (582.0, 0.0012548625925461162), (583.0, 0.0006274312962730581), (584.0, 0.003137156481365291), (585.0, 0.0025097251850922323), (586.0, 0.003137156481365291), (587.0, 0.0012548625925461162), (589.0, 0.100807294934538), (591.0, 0.002091437654243527), (592.0, 0.0006274312962730581), (593.0, 0.0006274312962730581), (594.0, 0.0006274312962730581), (598.0, 0.0012548625925461162), (599.0, 0.0037645877776383485), (601.0, 0.0012548625925461162), (602.0, 0.0018822938888191742), (605.0, 0.0018822938888191742), (606.0, 0.0037645877776383485), (607.0, 0.0012548625925461162), (609.0, 0.0004182875308487054), (610.0, 0.0004182875308487054), (611.0, 0.0025097251850922323), (612.0, 0.0008365750616974108), (613.0, 0.0012548625925461162), (614.0, 0.0025097251850922323), (615.0, 0.002384238925837621), (616.0, 0.0012548625925461162), (617.0, 0.0018822938888191742), (620.0, 0.005019450370184465), (621.0, 0.0004182875308487054), (622.0, 0.05019450370184465), (623.0, 0.0012548625925461162), (625.0, 0.004392019073911406), (629.0, 0.0025097251850922323), (630.0, 0.004601162839335759), (631.0, 0.0037645877776383485), (632.0, 0.0023005814196678793), (634.0, 0.07089973647885557), (635.0, 0.03639101518383737), (636.0, 0.0012548625925461162), (637.0, 0.0018822938888191742), (638.0, 0.0012548625925461162), (639.0, 0.00025097251850922326), (641.0, 0.0012548625925461162), (642.0, 0.0012548625925461162), (644.0, 0.0012548625925461162), (646.0, 0.0012548625925461162), (648.0, 0.0012548625925461162), (649.0, 0.0012548625925461162), (650.0, 0.0006274312962730581), (652.0, 0.0006274312962730581), (653.0, 0.004392019073911406), (654.0, 0.0012548625925461162), (655.0, 0.0018822938888191742), (656.0, 0.0006274312962730581), (657.0, 0.007529175555276697), (659.0, 0.0006274312962730581), (662.0, 0.0025097251850922323), (663.0, 0.0012548625925461162), (665.0, 0.005019450370184465), (666.0, 0.0006274312962730581), (667.0, 0.0012548625925461162), (670.0, 0.017568076295645624), (671.0, 0.04015560296147572), (672.0, 0.0006274312962730581), (673.0, 0.04935792864014723), (674.0, 0.0025097251850922323), (675.0, 0.0008365750616974108), (676.0, 0.007529175555276697), (677.0, 0.0012548625925461162), (678.0, 0.0012548625925461162), (680.0, 0.0025097251850922323), (681.0, 0.0012548625925461162), (682.0, 0.028234408332287613), (683.0, 0.08909524407077425), (684.0, 0.008784038147822812), (687.0, 0.0012548625925461162), (688.0, 0.0025097251850922323), (689.0, 0.0006274312962730581), (692.0, 0.0012548625925461162), (693.0, 0.0012548625925461162), (694.0, 0.0012548625925461162), (695.0, 0.013803488518007279), (696.0, 0.05019450370184465), (697.0, 0.06776257999749027), (699.0, 0.005019450370184465), (701.0, 0.0012548625925461162), (708.0, 0.0012548625925461162), (711.0, 0.0012548625925461162), (712.0, 0.0012548625925461162), (713.0, 0.00031371564813652904), (715.0, 0.0012548625925461162), (718.0, 0.0012548625925461162), (720.0, 0.0012548625925461162), (722.0, 0.0025097251850922323), (723.0, 0.0006274312962730581), (725.0, 0.0037645877776383485), (728.0, 0.0012548625925461162), (729.0, 0.0025097251850922323), (730.0, 0.0012548625925461162), (731.0, 0.002091437654243527), (732.0, 0.0004182875308487054), (736.0, 0.0012548625925461162), (737.0, 0.01003890074036893), (738.0, 0.003137156481365291), (740.0, 0.0014640063579704687), (741.0, 0.0028682573543911223), (742.0, 0.0012548625925461162), (743.0, 0.0009202325678671521), (746.0, 0.0006274312962730581), (747.0, 0.0012548625925461162), (752.0, 0.0012548625925461162), (755.0, 0.0025097251850922323), (756.0, 0.002091437654243527), (758.0, 0.0012548625925461162), (759.0, 0.0025097251850922323), (760.0, 0.0025097251850922323), (762.0, 0.0025097251850922323), (764.0, 0.0025097251850922323), (765.0, 0.06901744259003639), (766.0, 0.0012548625925461162), (767.0, 0.0037645877776383485), (769.0, 0.002091437654243527), (771.0, 0.0012548625925461162), (772.0, 0.0006274312962730581), (775.0, 0.005856025431881876), (778.0, 0.006274312962730582), (779.0, 0.0012548625925461162), (780.0, 0.0012548625925461162), (782.0, 0.0012548625925461162), (783.0, 0.0008365750616974108), (786.0, 0.0012548625925461162), (787.0, 0.03513615259129125), (789.0, 0.0012548625925461162), (790.0, 0.0012548625925461162), (791.0, 0.0006274312962730581), (792.0, 0.0012548625925461162), (793.0, 0.09871585728029447), (794.0, 0.025097251850922327), (795.0, 0.03513615259129125), (799.0, 0.0025097251850922323), (800.0, 0.005019450370184465)]
    print list_stable_duration
    print sum([i[1] for i in list_stable_duration])

    x_axis = [i[0] for i in list_stable_duration]
    y_pdf_axis = [i[1] for i in list_stable_duration]
    y_cdf_axis = cdf(y_pdf_axis)

    # Modify the size and dpi of picture, default size is (8,6), default dpi is 80
    plt.gcf().set_size_inches(10,9)
    # Define font
    font_label = {
    'fontname'   : 'Times New Roman',
    'color'      : 'black',
    'fontsize'   : 40
       }
    plt.grid(True)
    #
    # # Plot pdf
    # plt.plot(x_axis, y_pdf_axis, c='black', linewidth=2)
    # # plt.scatter(x_axis, y_pdf_axis, c='black', s=80)
    # plt.xlabel("stability duration (%)", font_label)
    # plt.ylabel("pdf (%)", font_label)
    # plt.xticks(fontsize=14)
    # plt.yticks(fontsize=14)
    # plt.xlim(0, 800)
    # plt.ylim(0, 0.25)
    # plt.savefig(os.path.join(PLOT_DIR, 'Plot_newSize', 'pdf_stability_duration.eps'), dpi=300, transparent=True)
    # plt.show()

    # Plot cdf
    plt.plot(x_axis, y_cdf_axis, c='black', linewidth=5)
    # plt.scatter(x_axis, y_cdf_axis, c='black', s=10)
    plt.xlabel("stability duration", font_label)
    plt.ylabel("cdf (%)", font_label)
    plt.xticks(fontsize=16)
    plt.yticks(fontsize=16)
    plt.xlim(0, 800)
    plt.ylim(91, 100)
    plt.savefig(os.path.join(PLOT_DIR, 'Plot_newSize', 'cdf_stability_duration.eps'), dpi=300, transparent=True)
    plt.show()
